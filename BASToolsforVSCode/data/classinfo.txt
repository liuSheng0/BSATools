* * all entities mapping * * * class atributes * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * * class atributes * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * * class atributes * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * * class atributes * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * * class atributes * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * * class atributes * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * * class atributes * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * * class atributes * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * * class atributes * * * * write * * * * * * * * catch * * * * finish
* * calculate media approach * * * class atributes * * * * calculate * * * * methods all methods.get number of excluded * * * * * * * im.is resolved * * * * catch * * * target method * * * * compare * * * * normalize * * * * else * * write excel format * * write statistics blind * * * * candidate * * * * method * * * * classe * .get by i d( * calculate for all strategies * * * * )
* * all entities mapping * * * class atributes * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * * class atributes * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * method j move * * * class atributes * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * * class atributes * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * * class atributes * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * * class atributes * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * * class atributes * * * * write * * * * * * * * catch * * * * finish
* * * * parameters * * * class atributes * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * * class atributes * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * * coefficients resolution * * * class atributes * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * * class atributes * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * * class atributes * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * * class atributes * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * * class atributes * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * * class atributes * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * * class atributes * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * * class atributes * * * * write * * * * * * * * catch * * * * finish
* * calculate media approach * * * class atributes * * * * calculate * * * * methods all methods.get number of excluded * * * * * * * im.is resolved * * * * catch * * * target method * * * * compare * * * * normalize * * * * else * * write excel format * * write statistics blind * * * * candidate * * * * method * * * * classe * .get by i d( * calculate for all strategies * * * * )
* * all entities mapping * * * class atributes * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * * class atributes * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * * class atributes * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * method j move * * * class atributes * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * * * suggestion * * * class atributes * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * * class atributes * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * * class atributes * * * * write * * * * * * * * catch * * * * finish
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * calculate media approach * * * class atributes * * * * calculate * * * * methods all methods.get number of excluded * * * * * * * im.is resolved * * * * catch * * * target method * * * * compare * * * * normalize * * * * else * * write excel format * * write statistics blind * * * * candidate * * * * method * * * * classe * .get by i d( * calculate for all strategies * * * * )
* * all entities mapping * * * class atributes * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * print output * * calculate media approach * * * * write * * * * * * * * catch * * * * finish
* * * class atributes * * calculate media approach * * * * equals * * * *
* * all entities mapping * * calculate media approach * * * * * * * get instance * * * insert mapping * * * * , * get by i d * * get by name * create entity i d
* * * coefficients resolution * * calculate media approach * * jaccard coefficient strategy * * yule coefficient strategy * * sorenson coefficient strategy * rogers tanimoto coefficient strategy * sokal sneath coefficient strategy * russell rao coefficient strategy * baroni urbani coefficient strategy sokal binary distance coefficient strategy * * ochiai coefficient strategy * dot product coefficient strategy * * kulczynski coefficient strategy p s c coefficient strategy * relative matching coefficient strategy * sokal sneath2 coefficient strategy * * * * * * * * calculate * * * define strategy * * all coefficient strategy
* * * * parameters * * calculate media approach * * * get p * * * set p * * * get q * * * set q * * * get r * * * set r * * * get s * * * set s * * * to string
* * * all methods * * calculate media approach * * * * dependencies * * * * * * * * , .get by i d(m.get name i d()) * .get by i d(chaves) * * * method id * source class i d * * * * )) put i method in mapping * * get i method * get all methods list get method by i d * get number of excluded * set number of excluded * * get move ispossible * exclude dependecies less than * * * exclude constructors * * * * it * * * * catch
* * method j move * * calculate media approach * * * * get source class i d set source class i d * get name i d * set name i d * * get methods dependencies * set new methods dependencies * * * hash code * * * * equals * * * to string
* * statistics method2 method * * calculate media approach * * * * * * * calculate parameters * * * * p * * * * q * * * * r * * * * s * * * in both * * in first only * * in second only * * * in none * * all depencies set * * * * parameters>
* * * * suggestion * * calculate media approach * * * * * * get method signature * * * * .substring(0, * * * * .length() * * * * ), * * * * , * * * * catch * * get class name * get source i file * get target i file * * * get positions * * get annotation text * get source compilation unit compilation unit cache jmove.get instance get target class compilation unit * get source method declaration recover source class type declaration recoverget target class type declaration * * get method name * * * to string
* * * candidate map * * calculate media approach * * * * * put candidate on list * * get candidates refine * * * get candidates * * * * run * * * * move * * * * candidates * * * * clazz * * * * catch * get candidates without monitor
* * * class atributes * * calculate media approach * * * * equals * * * *
